В начале реакт использовал калссывы компоненты. В дальнешйем пришли функциональные компоненты

Виртуальный дом это просто копия реального дома

Работа с Vitrual Dom намного быстрее нежели работа напрямую с DOM. (https://medium.com/devinder/react-virtual-dom-vs-real-dom-23749ff7adc9).

Рендер страницы (https://habr.com/ru/articles/224187/, https://habr.com/ru/companies/karuna/articles/568702/, https://developer.mozilla.org/ru/docs/Learn/Getting_started_with_the_web/How_the_Web_works).

npx create-react-app {название прокета} - создает react приложениш с названием которое указали в {название прокета}

npx create-react-app . - в данной директории создаем реакт приложение

Props --входные данные React-компонентов, передаваемые от родительского компонента дочернему компоненту. --тем сущности которые передаются компоненту в качестве параметров функции

--------------------------------Файловая Система--------------------------------

node_modules -> директория где хранятся ресурсы на библиотеки. Он не отпавляется в репозиториий. Поксольку весет много, и его можно просото скачать используя команду "npm i & install"
public -> это место где у нас хранится корневой html, favicon - логотип на сайте В докумнете /public/index.html есть корневой div с id "root"
src -> весь код нашего прокета. Комппоненты, хуки, вспомогательные функции, страницы и другие коды.
.gitignore - это докумнет, где опиовают типы документов, название директории которые должны быть игнориванны гитом. Для того чтобы они не попалу в репозиториий
/package-lock.json - это место где у нас есть информация как о самом прокете, так и есть все ресурсы и информация о каждой библиотеки (react-router-dom)
Хранит информацию о прокете. Ссылка на репозиторий, имя прокета, версия, зависимости, scripts. В scripts описываются команды для работы с прокетам
/README.md - Просто общая информация о прокете. Что он из себя предстялет, какие нюансы он имеет, какие верси техт или иных технологии надо использоват, какие версии ноды и npm надо использоват и тд.
///// Ресурсы

Что такое NPM https://proglib.io/p/chto-takoe-npm-gayd-po-node-package-manager-dlya-nachinayushchih-2020-07-21

https://www.freecodecamp.org/news/npm-vs-npx-whats-the-difference/ - npm vs npx

Файл package-lock.json - это файл, который создается в процессе установки пакетов Node.js с помощью менеджера пакетов npm. Он содержит информацию о конкретных версиях пакетов и их зависимостях, которые были установлены в вашем проекте.

Вот некоторая информация, которую стоит знать о файле package-lock.json:

Фиксированные версии: Файл package-lock.json содержит фиксированные версии пакетов, которые были установлены в проекте. Это означает, что при повторной установке проекта или переносе его на другую машину будут установлены точно те же версии пакетов.

Разрешение зависимостей: package-lock.json также содержит информацию о разрешении зависимостей между пакетами. Это означает, что для каждого установленного пакета указаны все его зависимости и их версии. Это помогает обеспечить совместимость между пакетами и предотвращает возможные конфликты версий.

Быстрая установка: package-lock.json позволяет npm выполнять более быструю установку пакетов. Поскольку информация о версиях и зависимостях уже содержится в файле, npm может просто считать этот файл и установить пакеты соответствующим образом, без необходимости делать дополнительные запросы к реестру пакетов.

https://react.dev/learn