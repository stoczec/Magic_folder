// –ò—Å–ø–æ–ª—å–∑—É—è —Ä–µ—Å—É—Ä—Å json placeholder –ø–æ–ª—É—á–∏—Ç–µ –≤—Å–µ—Ö —é–∑–µ—Ä–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Ç–æ–ª—å–∫–æ
// 1) username-—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É
// 2) –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –∫–∞–∂–¥–æ–≥–æ –∏–∑ —é–∑–µ—Ä–æ–≤ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ: post_count
// üëâüëâüëâ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —é–∑–µ—Ä–æ–≤: https://jsonplaceholder.typicode.com/users
// üëâüëâüëâ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ø–æ—Å—Ç–æ–≤: https://jsonplaceholder.typicode.com/posts
const users = [];
fetch('https://jsonplaceholder.typicode.com/users')
  .then((res) => res.json())
  .then((json) => sortUsers(json));

const sortUsers = (arr) => {
  // const array = [];
  for (let i = 0; i < arr.length; i++) {
    const obj = {};
    obj.id = arr[i].id;
    obj.username = arr[i].username;
    obj['post_count'] = 0;
    users.push(obj);
  }
  return users.sort((a, b) => (a.username > b.username ? 1 : -1));
};
fetch('https://jsonplaceholder.typicode.com/posts')
  .then((res) => res.json())
  .then((json) => postsUsers(json));

const postsUsers = (arr) => {
  for (let i = 0; i < arr.length; i++) {
    for (let j = 0; j < users.length; j++) {
      arr[i].userId === users[j].id ? (users[j].post_count += 1) : '';
    }
  }
  return users;
};
console.log(users);

//==============================================
// Level 2
// –í—ã–≤–µ–¥–∏—Ç–µ –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞ —ç–∫—Ä–∞–Ω –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ –∫–∞–∂–¥–æ–π –∏–∑ –¥–≤—É—Ö –∫–æ–ª–æ–Ω–æ–∫:
// –∞) username (default sort by alphabetical)
// b) post_count
// üëâüëâüëâ –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π, –Ω–∞–∑–≤–∞–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö, –Ω–∞–∑–≤–∞–Ω–∏—è —Å–∞–º–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ HTML –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∞–∫,
// —á—Ç–æ–±—ã –±—ã–ª–æ –ø–æ–Ω—è—Ç–Ω–æ —á—Ç–æ –æ–Ω–∏ –∏–∑ —Å–µ–±—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç!

let usersNew = [];
let sortedByUsername = false;
let sortedByPostCount = false;

function fetchUsers() {
  fetch('https://jsonplaceholder.typicode.com/users')
    .then((res) => res.json())
    .then((fetchedUsers) => {
      usersNew = fetchedUsers;
      usersNew.forEach((el) => (el.post_count = 0));
    });
  render();
}

function fetchPosts() {
  fetch('https://jsonplaceholder.typicode.com/posts')
    .then((res) => res.json())
    .then((posts) => {
      posts.forEach((post) => {
        post.userId === usersNew.id ? (usersNew.post_count += 1) : '';
        const userIndex = post.userId - 1;
        if (userIndex >= 0 && userIndex < usersNew.length) {
          usersNew[userIndex].post_count++;
        }
      });

      render();
    });
}

const table = document.querySelector('.table');
const render = () => {
  usersNew.forEach(({ username, post_count }) => {
    // —Å–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    const tr = document.createElement('tr');
    const tdUsername = document.createElement('td');
    const tdPostcount = document.createElement('td');
    // –¥–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
    table.append(tr);
    tr.append(tdUsername, tdPostcount);
    // –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    tdUsername.innerText = username;
    tdPostcount.innerText = post_count;
  });
};

fetchUsers();
fetchPosts();
