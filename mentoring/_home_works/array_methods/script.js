// https://docs.google.com/document/d/1bUiI0lKb5kKD00q0GHLjx7Basp02x9vo-k8REkFc5WU/edit

// В программе задан массив, передающий строковые элементы. Напишите программу, которая которая ответит на вопрос:
// присутствует ли в массиве элемент, чей корень длины возвращает целое число? В качестве ответа необходимо вывести булевый тип true, false.
// Пример: ['Велосипед','Торт','Тенис,'Ракетка','Город']
// Результат: true

const arr = ['Велосипед', 'Торт', 'Тенис', 'Ракетка', 'Город'];
const answer = arr.some((elem) => Number.isInteger(Math.sqrt(elem.length)));
// console.log(answer);

// В программе задан массив, передающий числовые элементы. Напишите программу, которая сформирует новый массив из отрицательных чисел заданного массива.
// Пример: [1,2,3,-4,5,-6,7,-8,9,10]
// Результат: [-4,-6,-8]

const numberss = [1, 2, 3, -4, 5, -6, 7, -8, 9, 10];
const negNumbers = numberss.filter((el) => el < 0);
// console.log(negNumbers);

// В программе задана переменная numbers, которая хранит массив из чисел. Определите, какое максимальное количество элементов массива numbers
// (в порядке, который реализован в массиве) можно сложить, чтобы их итоговая сумма не превышала 50. Результат выведите в консоль.
// Пример значений переменных:
// let numbers = [10, 20, 33, 55, 100]
// Пример результата: 2

let numbers = [10, 20, 33, 55, 100];
let count = 0;
let answ = 0;

for (let i = 0; i < numbers.length; i++) {
  answ += numbers[i];
  answ <= 50 ? count++ : '';
}
// console.log(count);

// В программе задана переменная values, которая хранит массив из строк.
// Определите математическую сумму всех элементов, которые при преобразовании в число не вернут значение NaN.
// Результат выведите в консоль.
// Пример значений переменных:
// let values = ["100", "30", "Не число", "20", "Тоже не число"]
// Пример результата: 150
let values = ['100', '30', 'Не число', '20', 'Тоже не число'];
let sum = 0;
for (let i = 0; i < values.length; i++) {
  Number(values[i]) ? (sum += Number(values[i])) : '';
}
// console.log(sum);

// В программе заданы два массива array_1 и array_2, элементы которого являются числами.
// Значения внутри одного массива уникальные. Реализуйте функцию intersection, которая принимает в качестве аргументов два массива и возвращает новый массив.
// Он должен содержать значения, которые встречаются в обоих массивах-аргументах, и быть отсортирован по убыванию.

// Пример значений переменных:
let array_1 = [1, 4, 7, 8, 2, 85];
let array_2 = [1, 5, 85, 11, 6, 2];

// Пример результата: [2, 1]

const intersection = (arr1, arr2) => {
  const newArr = [];
  for (let i = 0; i < arr1.length; i++) {
    for (let m = 0; m < arr2.length; m++) {
      arr1[i] === arr2[m] ? newArr.push(arr1[i]) : '';
    }
  }
  return newArr.sort((a, b) => b - a);
};
console.log(intersection(array_1, array_2));
